@model WaterProj.Models.Transporter

@{
    ViewData["Title"] = "Регистрация перевозчика";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-lg border-0 rounded-lg">
                <div class="card-header bg-primary text-white text-center py-4">
                    <h2 class="mb-0"><i class="bi bi-building me-2"></i>Регистрация перевозчика</h2>
                </div>
                
                <div class="card-body p-4">
                    @if (ViewBag.ValidationErrors != null)
                    {
                        <div class="alert alert-danger">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i> Пожалуйста, исправьте следующие ошибки:
                            <ul class="mb-0 mt-2">
                                @foreach (string error in ViewBag.ValidationErrors)
                                {
                                    <li>@error</li>
                                }
                            </ul>
                        </div>
                    }

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <form asp-action="RegisterTransporter" method="post">
                        <div class="row">
                            <!-- Левая колонка -->
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Name" class="form-label">Название компании</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-building"></i></span>
                                        <input asp-for="Name" class="form-control" placeholder="Название вашей компании" />
                                    </div>
                                    <span asp-validation-for="Name" class="text-danger small"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="Email" class="form-label">Email</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-envelope"></i></span>
                                        <input asp-for="Email" class="form-control" placeholder="Email для связи" />
                                    </div>
                                    <span asp-validation-for="Email" class="text-danger small"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="Phone" class="form-label">Телефон</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-telephone"></i></span>
                                        <input asp-for="Phone" class="form-control" placeholder="+7 (XXX) XXX-XX-XX" />
                                    </div>
                                    <span asp-validation-for="Phone" class="text-danger small"></span>
                                </div>
                            </div>

                            <!-- Правая колонка -->
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Login" class="form-label">Логин</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-person-circle"></i></span>
                                        <input asp-for="Login" class="form-control" placeholder="Придумайте логин" />
                                    </div>
                                    <span asp-validation-for="Login" class="text-danger small"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="PasswordHash" class="form-label">Пароль</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-key"></i></span>
                                        <input asp-for="PasswordHash" type="password" class="form-control" placeholder="Придумайте пароль" />
                                        <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                            <i class="bi bi-eye"></i>
                                        </button>
                                    </div>
                                    <span asp-validation-for="PasswordHash" class="text-danger small"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Описание компании на всю ширину -->
                        <div class="mb-3">
                            <label asp-for="Description" class="form-label">Описание компании</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-info-circle"></i></span>
                                <textarea asp-for="Description" class="form-control" rows="4" 
                                          placeholder="Расскажите о вашей компании, видах транспорта, опыте работы"></textarea>
                            </div>
                            <span asp-validation-for="Description" class="text-danger small"></span>
                        </div>

                        <div class="d-grid gap-2 mt-4 mb-3">
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="bi bi-check-circle me-2"></i>Зарегистрировать компанию
                            </button>
                        </div>
                    </form>
                </div>
                
                <div class="card-footer text-center py-3 bg-light">
                    <div class="text-muted mb-2">Вы обычный пользователь, а не перевозчик?</div>
                    <a asp-controller="Registration" asp-action="Index" class="btn btn-outline-secondary">
                        <i class="bi bi-person me-1"></i> Регистрация пользователя
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
    // Переключение видимости пароля
    document.getElementById('togglePassword').addEventListener('click', function() {
        const passwordInput = document.getElementById('@Html.IdFor(m => m.PasswordHash)');
        const icon = this.querySelector('i');
        
        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            icon.classList.remove('bi-eye');
            icon.classList.add('bi-eye-slash');
        } else {
            passwordInput.type = 'password';
            icon.classList.remove('bi-eye-slash');
            icon.classList.add('bi-eye');
        }
    });

    // Функция мгновенной валидации формы
    document.addEventListener('DOMContentLoaded', function() {
        // Получаем все поля и кнопку отправки
        const nameInput = document.getElementById('@Html.IdFor(m => m.Name)');
        const emailInput = document.getElementById('@Html.IdFor(m => m.Email)');
        const phoneInput = document.getElementById('@Html.IdFor(m => m.Phone)');
        const loginInput = document.getElementById('@Html.IdFor(m => m.Login)');
        const passwordInput = document.getElementById('@Html.IdFor(m => m.PasswordHash)');
        const descriptionInput = document.getElementById('@Html.IdFor(m => m.Description)');
        const submitButton = document.querySelector('button[type="submit"]');
        
        // Набор полей для валидации
        const inputFields = [nameInput, emailInput, phoneInput, loginInput, passwordInput];
        
        // Функции валидации для каждого поля
        const validators = {
            // Название компании: не пустое и не менее 2 символов
            [nameInput.id]: function(value) {
                if (!value.trim()) return 'Название компании обязательно для заполнения';
                if (value.trim().length < 2) return 'Название компании должно содержать минимум 2 символа';
                return null;
            },
            
            // Email: не пустой и соответствует формату email
            [emailInput.id]: function(value) {
                if (!value.trim()) return 'Email обязателен для заполнения';
                var re = /^[a-z0-9\.\_%+-]+@@[a-z0-9\.\-]+\.[a-z]{2,4}$/i;
                if (!re.test(value)) return 'Введите корректный email адрес';
                return null;
            },
            
            // Телефон: не пустой и соответствует формату российского телефона
            [phoneInput.id]: function(value) {
                if (!value.trim()) return 'Номер телефона обязателен для заполнения';
                const re = /^(\+7|8)?[\s\-]?\(?[0-9]{3}\)?[\s\-]?[0-9]{3}[\s\-]?[0-9]{2}[\s\-]?[0-9]{2}$/;
                if (!re.test(value)) return 'Введите корректный номер телефона';
                return null;
            },
            
            // Логин: не пустой и минимум 3 символа
            [loginInput.id]: function(value) {
                if (!value.trim()) return 'Логин обязателен для заполнения';
                if (value.trim().length < 3) return 'Логин должен содержать минимум 3 символа';
                return null;
            },
            
            // Пароль: не пустой и минимум 6 символов
            [passwordInput.id]: function(value) {
                if (!value.trim()) return 'Пароль обязателен для заполнения';
                if (value.trim().length < 6) return 'Пароль должен содержать минимум 6 символов';
                return null;
            }
        };
        
        // Описание - проверяем только длину, если заполнено
        if (descriptionInput) {
            validators[descriptionInput.id] = function(value) {
                if (value.trim().length > 1000) return 'Описание не должно превышать 1000 символов';
                return null;
            };
            inputFields.push(descriptionInput);
        }
        
        // Проверяет все поля и возвращает true, если форма валидна
        function validateForm() {
            let isValid = true;
            
            inputFields.forEach(function(input) {
                if (input && validators[input.id]) {
                    const error = validators[input.id](input.value);
                    displayError(input, error);
                    if (error) isValid = false;
                }
            });
            
            // Обновляем состояние кнопки отправки
            submitButton.disabled = !isValid;
            if (!isValid) {
                submitButton.classList.add('btn-secondary');
                submitButton.classList.remove('btn-primary');
            } else {
                submitButton.classList.remove('btn-secondary');
                submitButton.classList.add('btn-primary');
            }
            
            return isValid;
        }
        
        // Отображает сообщение об ошибке для поля
        function displayError(input, errorMessage) {
            const errorElement = input.parentNode.parentNode.querySelector('.text-danger');
            
            if (errorElement) {
                if (errorMessage) {
                    errorElement.textContent = errorMessage;
                    input.classList.add('is-invalid');
                    input.classList.remove('is-valid');
                } else {
                    errorElement.textContent = '';
                    input.classList.remove('is-invalid');
                    input.classList.add('is-valid');
                }
            }
        }
        
        // Добавляем обработчики события input для всех полей
        inputFields.forEach(function(input) {
            if (input) {
                input.addEventListener('input', function() {
                    // Проверяем текущее поле
                    const error = validators[input.id] ? validators[input.id](input.value) : null;
                    displayError(input, error);
                    
                    // Проверяем всю форму для обновления состояния кнопки
                    validateForm();
                });
            }
        });
        
        // Валидация при отправке формы
        document.querySelector('form').addEventListener('submit', function(event) {
            if (!validateForm()) {
                event.preventDefault();
            }
        });
        
        // Проверяем форму при загрузке страницы
        validateForm();
    });
    </script>
}