@model WaterProj.Models.Consumer

@{
    ViewData["Title"] = "Регистрация";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-lg border-0 rounded-lg">
                <div class="card-header bg-primary text-white text-center py-4">
                    <h2 class="mb-0"><i class="bi bi-person-plus-fill me-2"></i>Регистрация пользователя</h2>
                </div>
                
                <div class="card-body p-4">
                    @if (ViewBag.ValidationErrors != null)
                    {
                        <div class="alert alert-danger">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i> Пожалуйста, исправьте следующие ошибки:
                            <ul class="mb-0 mt-2">
                                @foreach (string error in ViewBag.ValidationErrors)
                                {
                                    <li>@error</li>
                                }
                            </ul>
                        </div>
                    }

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <form asp-action="Index" method="post">
                        <div class="row">
                            <!-- Левая колонка -->
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Name" class="form-label">Имя</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-person"></i></span>
                                        <input asp-for="Name" class="form-control" placeholder="Введите ваше имя" />
                                    </div>
                                    <span asp-validation-for="Name" class="text-danger small"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="Surname" class="form-label">Фамилия</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-person-badge"></i></span>
                                        <input asp-for="Surname" class="form-control" placeholder="Введите вашу фамилию" />
                                    </div>
                                    <span asp-validation-for="Surname" class="text-danger small"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="Phone" class="form-label">Телефон</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-telephone"></i></span>
                                        <input asp-for="Phone" class="form-control" placeholder="+7 (XXX) XXX-XX-XX" />
                                    </div>
                                    <span asp-validation-for="Phone" class="text-danger small"></span>
                                </div>
                            </div>

                            <!-- Правая колонка -->
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Login" class="form-label">Логин</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-person-circle"></i></span>
                                        <input asp-for="Login" class="form-control" placeholder="Придумайте логин" />
                                    </div>
                                    <span asp-validation-for="Login" class="text-danger small"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="PasswordHash" class="form-label">Пароль</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-key"></i></span>
                                        <input asp-for="PasswordHash" type="password" class="form-control" placeholder="Придумайте пароль" />
                                        <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                            <i class="bi bi-eye"></i>
                                        </button>
                                    </div>
                                    <span asp-validation-for="PasswordHash" class="text-danger small"></span>
                                </div>
                            </div>
                        </div>

                        <div class="d-grid gap-2 mt-4 mb-3">
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="bi bi-check-circle me-2"></i>Зарегистрироваться
                            </button>
                        </div>
                    </form>
                </div>
                
                <div class="card-footer text-center py-3 bg-light">
                    <div class="text-muted mb-2">Вы представитель компании-перевозчика?</div>
                    <a asp-controller="Registration" asp-action="RegisterTransporter" class="btn btn-outline-secondary">
                        <i class="bi bi-building me-1"></i> Регистрация в качестве перевозчика
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Переключение видимости пароля
        document.getElementById('togglePassword').addEventListener('click', function() {
            const passwordInput = document.getElementById('@Html.IdFor(m => m.PasswordHash)');
            const icon = this.querySelector('i');

            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                icon.classList.remove('bi-eye');
                icon.classList.add('bi-eye-slash');
            } else {
                passwordInput.type = 'password';
                icon.classList.remove('bi-eye-slash');
                icon.classList.add('bi-eye');
            }
        });

        // Валидация формы
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');

            // Находим все поля формы
            const nameInput = document.getElementById('@Html.IdFor(m => m.Name)');
            const surnameInput = document.getElementById('@Html.IdFor(m => m.Surname)');
            const phoneInput = document.getElementById('@Html.IdFor(m => m.Phone)');
            const loginInput = document.getElementById('@Html.IdFor(m => m.Login)');
            const passwordInput = document.getElementById('@Html.IdFor(m => m.PasswordHash)');

            // Установка маски для телефона
            phoneInput.addEventListener('input', function(e) {
                let x = e.target.value.replace(/\D/g, '').match(/(\d{0,1})(\d{0,3})(\d{0,3})(\d{0,2})(\d{0,2})/);
                if (x[1] != '') {
                    e.target.value = '+' + x[1] + (x[2] ? ' (' + x[2] + ')' : '') + (x[3] ? ' ' + x[3] : '') + (x[4] ? '-' + x[4] : '') + (x[5] ? '-' + x[5] : '');
                } else {
                    e.target.value = '';
                }
            });

            // Функция проверки
            function validateField(input, errorSelector, validationFn, errorMessage) {
                const errorElement = document.querySelector(errorSelector);
                const isValid = validationFn(input.value);

                if (!isValid) {
                    errorElement.textContent = errorMessage;
                    input.classList.add('is-invalid');
                    return false;
                } else {
                    errorElement.textContent = '';
                    input.classList.remove('is-invalid');
                    input.classList.add('is-valid');
                    return true;
                }
            }

            // Валидация перед отправкой формы
            form.addEventListener('submit', function(e) {
                let isFormValid = true;

                // Валидация имени
                isFormValid = validateField(
                    nameInput,
                    '[data-valmsg-for="Name"]',
                    (value) => value.trim().length >= 2 && /^[А-ЯЁа-яёA-Za-z\s-]+$/.test(value),
                    'Имя должно содержать не менее 2 символов и только буквы'
                ) && isFormValid;

                // Валидация фамилии
                isFormValid = validateField(
                    surnameInput,
                    '[data-valmsg-for="Surname"]',
                    (value) => value.trim().length >= 2 && /^[А-ЯЁа-яёA-Za-z\s-]+$/.test(value),
                    'Фамилия должна содержать не менее 2 символов и только буквы'
                ) && isFormValid;

                // Валидация телефона
                isFormValid = validateField(
                    phoneInput,
                    '[data-valmsg-for="Phone"]',
                    (value) => /^\+7 \(\d{3}\) \d{3}-\d{2}-\d{2}$/.test(value),
                    'Введите корректный номер телефона в формате +7 (XXX) XXX-XX-XX'
                ) && isFormValid;

                // Валидация логина
                isFormValid = validateField(
                    loginInput,
                    '[data-valmsg-for="Login"]',
                    (value) => value.trim().length >= 5 && /^[a-zA-Z0-9_]+$/.test(value),
                    'Логин должен содержать не менее 5 символов и состоять из букв, цифр и знака подчеркивания'
                ) && isFormValid;

                // Валидация пароля
                isFormValid = validateField(
                    passwordInput,
                    '[data-valmsg-for="PasswordHash"]',
                    (value) => value.length >= 8 && /(?=.*[a-z])(?=.*[A-Z])(?=.*\d)/.test(value),
                    'Пароль должен содержать не менее 8 символов, включая заглавные, строчные буквы и цифры'
                ) && isFormValid;

                if (!isFormValid) {
                    e.preventDefault();
                }
            });

            // Валидация при потере фокуса для каждого поля
            nameInput.addEventListener('blur', function() {
                validateField(
                    nameInput,
                    '[data-valmsg-for="Name"]',
                    (value) => value.trim().length >= 2 && /^[А-ЯЁа-яёA-Za-z\s-]+$/.test(value),
                    'Имя должно содержать не менее 2 символов и только буквы'
                );
            });

            surnameInput.addEventListener('blur', function() {
                validateField(
                    surnameInput,
                    '[data-valmsg-for="Surname"]',
                    (value) => value.trim().length >= 2 && /^[А-ЯЁа-яёA-Za-z\s-]+$/.test(value),
                    'Фамилия должна содержать не менее 2 символов и только буквы'
                );
            });

            phoneInput.addEventListener('blur', function() {
                validateField(
                    phoneInput,
                    '[data-valmsg-for="Phone"]',
                    (value) => /^\+7 \(\d{3}\) \d{3}-\d{2}-\d{2}$/.test(value),
                    'Введите корректный номер телефона в формате +7 (XXX) XXX-XX-XX'
                );
            });

            loginInput.addEventListener('blur', function() {
                validateField(
                    loginInput,
                    '[data-valmsg-for="Login"]',
                    (value) => value.trim().length >= 5 && /^[a-zA-Z0-9_]+$/.test(value),
                    'Логин должен содержать не менее 5 символов и состоять из букв, цифр и знака подчеркивания'
                );
            });

            passwordInput.addEventListener('blur', function() {
                validateField(
                    passwordInput,
                    '[data-valmsg-for="PasswordHash"]',
                    (value) => value.length >= 8 && /(?=.*[a-z])(?=.*[A-Z])(?=.*\d)/.test(value),
                    'Пароль должен содержать не менее 8 символов, включая заглавные, строчные буквы и цифры'
                );
            });
        });
    </script>
}