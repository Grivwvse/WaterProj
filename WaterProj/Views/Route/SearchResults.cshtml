@model List<WaterProj.DTOs.RouteSearchResultDto>

@{
    ViewData["Title"] = "Результаты поиска маршрутов";
}

<section>

    <div class="page-wrapper">
        <div class="container main-container">
            <!-- Информация о маршруте -->
            <div class="route-info">
                <h2 class="mb-4">Информация о маршруте</h2>

                <div class="route-points mb-4">
                    <div class="route-point">
                        <div class="icon bg-success text-white">
                            <i class="bi bi-circle-fill"></i>
                        </div>
                        <div class="details">
                            <h5 class="mb-1">Откуда</h5>
                            <p class="mb-0" id="startStopField">Остановка "@ViewBag.StartStopName"</p>
                        </div>
                    </div>
                    <div class="route-separator">
                        <i class="bi bi-arrow-right"></i> <!-- Стрелка вправо -->
                    </div>
                    <div class="route-point">
                        <div class="icon bg-danger text-white">
                            <i class="bi bi-geo-alt-fill"></i>
                        </div>
                        <div class="details">
                            <h5 class="mb-1">Куда</h5>
                            <p class="mb-0" id="endStopField">Остановка "@ViewBag.EndStopName"</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Заголовок подобранных маршрутов -->
            <div class="routes-header">
                <h3>Подобранные маршруты</h3>
                <p class="text-muted">Найдено @ViewBag.RouteAmount вариантов проезда</p>
            </div>

            @if (Model == null || !Model.Any())
            {
                <p>Маршруты не найдены</p>
            }
            else
            {

                @foreach (var route in Model)
                {

                    <!-- Карточки маршрутов -->
                    <div class="routes-container">
                        <!-- Карточка 1 -->
                        <div class="card route-card" data-route-id="@route.RouteId">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <h5 class="card-title mb-0">
                                        <span class="route-number">@route.Name</span>
                                        <span class="route-time">25 минут в пути</span>
                                    </h5>
                                    

                                    @if (route.Rating < 3 && route.Rating >= 1)
                                    {
                                        <span class="badge bg-danger">Рейтинг : @Math.Round(@route.Rating, 1)</span>
                                    }
                                    @if (route.Rating < 4 && route.Rating > 3)
                                    {
                                        <span class="badge bg-warning">Рейтинг : @Math.Round(@route.Rating, 1)</span>
                                    }
                                    @if (route.Rating >= 4)
                                    {
                                        <span class="badge bg-success">Рейтинг : @Math.Round(@route.Rating, 1)</span>
                                    }
                                    @if (route.Rating < 1)
                                    {
                                        <span class="badge bg-secondary">Рейтинг : Нет данных</span>
                                    }


                                    
                                </div>
                                <p class="card-text">@(string.IsNullOrEmpty(route.Description) ? "Нет описания" : route.Description)</p>
                                <div class="route-details">
                                    <div>Расписание @(string.IsNullOrEmpty(route.Schedule) ? "Нет описания" : route.Schedule  )</div>
                                    <div>Перевозчик: @route.TransporterName Рейтинг : @(route.TransporterRating > 0 ? "Нет данных" : route.TransporterRating)</div>
                                </div>
                                <div class="mt-3">
                                    <a href="/Route/RouteDetails?routeID=@route.RouteId" class="btn btn-outline-primary btn-sm">Подробнее</a>
                                    <a href="#" class="btn btn-primary btn-sm ms-2">Выбрать маршрут</a>

                                </div>
                            </div>
                        </div>
                    </div>
                }

            }

          
        </div>
    </div>



</section>

@if (ViewBag.SearchType == "ByName")
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Находим все карточки маршрутов
            const routeCards = document.querySelectorAll(".route-card");

            routeCards.forEach(card => {
                card.addEventListener("click", async function () {
                    const routeId = this.getAttribute("data-route-id");

                    try {
                        // Убираем выделение с других карточек
                        routeCards.forEach(c => c.classList.remove("selected"));

                        // Добавляем выделение к текущей карточке
                        this.classList.add("selected");

                        // Отправляем запрос на сервер для получения начальной и конечной остановки
                        const response = await fetch(`/Route/GetRouteEndpoints?routeId=${routeId}`);
                        if (!response.ok) {
                            throw new Error("Ошибка при получении данных остановок");
                        }

                        const data = await response.json();
                        if (data.success) {
                            // Обновляем поля "откуда" и "куда"
                            document.getElementById("startStopField").textContent = "Остановка \"" + data.startStopName + "\"";
                            document.getElementById("endStopField").textContent = "Остановка \"" +  data.endStopName + "\"";
                        } else {
                            console.error("Ошибка: ", data.error);
                        }
                    } catch (error) {
                        console.error("Ошибка при обработке клика на карточку маршрута:", error);
                    }
                });
            });
        });
    </script>
}